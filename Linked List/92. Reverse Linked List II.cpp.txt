/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int left, int right) {
       ListNode* temp=head;
       ListNode* pre=NULL;
       int c=1;
       while(c!=left){
           pre=temp;
           temp=temp->next;
           c++;
       }

       ListNode* curr=temp->next; ListNode* prev=temp;
       int cnt=left+1;
       while(cnt<=right){
           ListNode* fwd=curr->next;
           curr->next=prev;
           prev=curr; curr=fwd;
           cnt++;
       }
       if(left==1)
       head=prev;
       else
       pre->next=prev;

       temp->next=curr;
       return head;

    }
};
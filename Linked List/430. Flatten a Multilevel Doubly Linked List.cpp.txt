 Node* temp=head;
        while(temp!=NULL)
        {
            Node* a=temp->next;
            if(temp->child!=NULL)
            {
                Node* c=temp->child;
                temp->child=NULL;
                c=flatten(c);
                temp->next=c;
                c->prev=temp;
                while(c->next!=NULL)
                {
                    c=c->next;
                }
                c->next=a;
                if(a) a->prev=c;
            }
            temp=a;
        }
        return head;


-------------------------------------------- USING STACK-----------------------

Node* flatten(Node* head) {
        Node* temp=head;
      stack<Node*> st;
      while(temp!=NULL)
      {
        if(temp->child!=NULL)
        {
            Node* nextNode=temp->next;
            temp->next=temp->child;
            temp->child->prev=temp;
            temp->child=NULL;

            if(nextNode!=NULL)
            {
                st.push(nextNode);

            }
        }
        else if(temp->next==NULL && !st.empty())
        {
            Node* nextNode=st.top();
            st.pop();
            temp->next=nextNode;
            nextNode->prev=temp;
        }
        temp=temp->next;
      }
       return head;
    }
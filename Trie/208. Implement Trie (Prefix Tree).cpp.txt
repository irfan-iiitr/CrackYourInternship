class Node{
    public:
    Node* children[26];
    bool isLeaf=false;
};
class Trie {
public:
    Node* root;
    Trie() {
      root=new Node();
    }
    
    void insert(string word) {
        Node* temp=root;
        for(int i=0;i<word.length();i++){
            char ch=word[i];
            if(temp->children[ch-'a']!=NULL){
                temp=temp->children[ch-'a'];
            }
            else{
                temp->children[ch-'a']=new Node();
                temp=temp->children[ch-'a'];
            }
        }
        temp->isLeaf=true;//one qord ends here..marked down
    }
    
    bool search(string word) {
        Node* temp=root;
        for(auto ch:word){
            int idx=ch-'a';
            if(temp->children[idx]!=NULL){
                temp=temp->children[idx];
            }
            else
            return false;
        }
        return temp->isLeaf;
    }
    
    bool startsWith(string prefix) {
       Node* temp=root;
        for(auto ch :prefix){
          int idx=ch-'a';
          if(temp->children[idx]!=NULL)
          temp=temp->children[idx];
          else
          return false;
        }

        return true; 
    }
};

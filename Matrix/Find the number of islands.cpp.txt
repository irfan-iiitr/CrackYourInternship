public:
  bool isValid(int i, int j, int n , int m, vector<vector<char>>& grid){
        if(i>=0 && i<n && j>=0 && j<m && grid[i][j] == '1')
            return true;
        
        return false;
    }
  
   void f(int i, int j, int n, int m, vector<vector<char>>& grid) {
    if (!isValid(i, j, n, m, grid)) {
        return;
    }
    
    grid[i][j] = '0';

    f(i + 1, j, n, m, grid);
    f(i - 1, j, n, m, grid);
    f(i, j + 1, n, m, grid);
    f(i, j - 1, n, m, grid);
    f(i - 1, j - 1, n, m, grid);
    f(i - 1, j + 1, n, m, grid);
    f(i + 1, j - 1, n, m, grid);
    f(i + 1, j + 1, n, m, grid);
}
    // Function to find the number of islands.
    int numIslands(vector<vector<char>>& grid) {
        // Code here
        // agar 1 hai...to traverse ka       
        int n=grid.size(); int m=grid[0].size();
//ro aage..sab visit ho jayega ek island pe
        //aur counter bardh jayega
        //jahna jahan jaara usko '1'ko zero kar dera
        int c=0;
        
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]=='1')
                {
                    c++;
                    f(i,j,n,m,grid);
                }
            }
        }
        
        return c;
    }
};
------------------MIN STEPS -----------------MIN STEPS-------------------

int minStepToReachTarget(vector<int>&KnightPos,vector<int>&TargetPos,int N)
	{
	  vector<vector<bool>> vis(n, vector<bool>(n, false));
        queue<pair<pair<int,int>,int>> q;
        q.push({{k[0]-1, k[1]-1}, 0});
        int dx[8] = {1, 1, -1, -1, 2, 2, -2, -2};
        int dy[8] = {-2, 2, -2, 2, -1, 1, -1, 1};
        while (!q.empty()) {
            auto a = q.front();
            int x = a.first.first;
            int y = a.first.second;
            int count = a.second;
            q.pop();
            if (x == t[0]-1 && y == t[1]-1) {
                return count;
            }
            for (int i = 0; i < 8; i++) {
                int nx = x + dx[i];
                int ny = y + dy[i];
                if (nx >= 0 && nx < n && ny >= 0 && ny < n && !vis[nx][ny]) {
                    vis[nx][ny] = true;
                    q.push({{nx, ny}, count + 1});
                }
            }
        }
        return -1;
}
class NumMatrix {
public:
vector<vector<int>> v;
    NumMatrix(vector<vector<int>>& matrix) {
      v=matrix;
      for(int i=0;i<matrix.size();i++){
          for(int j=0;j<matrix[0].size();j++){
              int left=0, up=0,diagonal=0;
              if(i-1>=0) left= v[i-1][j];
              if(j-1>=0) up=v[i][j-1];
              if(i-1>=0 and j-1>=0 ) diagonal=v[i-1][j-1];
              v[i][j]=matrix[i][j]+ up+left-diagonal;
          }
      }

    }
    
    int sumRegion(int row1, int col1, int row2, int col2) {
       int sum=0;
       int leftbottom=0, upperright=0,diagonal=0;
       if(col1-1>=0)
       leftbottom=v[row2][col1-1];
       if(row1-1>=0)
       upperright=v[row1-1][col2];
       if(col1-1>=0 and row1-1>=0) diagonal=v[row1-1][col1-1];
       return v[row2][col2]-leftbottom-upperright+diagonal;
    }
};

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix* obj = new NumMatrix(matrix);
 * int param_1 = obj->sumRegion(row1,col1,row2,col2);
 */
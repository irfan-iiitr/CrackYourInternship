class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {

        priority_queue<pair<int, pair<int, int>>, vector<pair<int, pair<int, int>>>, greater<pair<int, pair<int, int>>>> minHeap;

        for (auto point: points)
        {
            int x = point[0]; 
            int y = point[1];
            
            minHeap.push({x * x + y * y, {x, y}});
        }
        vector<vector<int>> res;

        while (k--)
        {
            auto min = minHeap.top();
            minHeap.pop();
            res.push_back({min.second.first, min.second.second});
        }

        return res;
    }
};
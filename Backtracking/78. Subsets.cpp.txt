class Solution {
public:
vector<vector<int>> ans;
void f(int i,int n,vector<int>& nums,vector<int>& path){
   if(i==n) {
    ans.push_back(path); return;
   }

   path.push_back(nums[i]);
   f(i+1,n,nums,path);
   path.pop_back();
   f(i+1,n,nums,path);
}
    vector<vector<int>> subsets(vector<int>& nums) {
        int n=nums.size();
        vector<int> path;
        f(0,n,nums,path);
        return ans;
    }
};



class Solution {
public:
    vector<vector<int>> subsets(vector<int>& nums) {
        vector<vector<int>> ans;
        int n=nums.size();
        
        for(int i=0;i<(1<<n);i++){
            vector<int> temp;
            for(int j=0;j<n;j++){
                if(i&(1<<j))
                temp.push_back(nums[j]);
            }
            ans.push_back(temp);
        }
        return ans;
    }
};
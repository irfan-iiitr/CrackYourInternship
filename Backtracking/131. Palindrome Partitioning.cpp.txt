class Solution {
public:
 vector<vector<string>> ans;
bool isPalin(string s){
    int i=0,j=s.length()-1;
    while(i<j){
        if(s[i]!=s[j]) return false;
        i++; j--;
    }
    return true;
}
 void f(int idx,string s,vector<string>&path){
    if(idx>=s.length()) {
        ans.push_back(path);
    }

    cout<<idx<<endl;

    for(int i=idx;i<s.length();i++){
        if(isPalin(s.substr(idx,i-idx+1))){
            path.push_back(s.substr(idx,i-idx+1));
            f(i+1,s,path);
            path.pop_back();
        }
    }

 }
    vector<vector<string>> partition(string s) {
       vector<string> path;
       f(0,s,path);
       return ans;
    }
};